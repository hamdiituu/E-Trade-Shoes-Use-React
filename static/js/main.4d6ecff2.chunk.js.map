{"version":3,"sources":["components/Card/Card.js","components/Filter/Core/Colors.js","components/Filter/Core/Genders.js","components/Filter/Core/Numbers.js","components/Filter/Core/Trades.js","components/Filter/Filter.js","components/Filter/Core/ShowButton.js","components/Filter/Core/SearchBox.js","components/Header/Header.js","components/CardList/CardList.js","views/Home/HomePage.js","utils/Constans.js","utils/Networking.js","App.js","serviceWorker.js","index.js"],"names":["NumberWiew","data","style","flexDirection","map","item","margin","background","color","borderRadius","padding","key","Card","product","this","props","className","src","image","alt","name","trade","genderName","number","price","Component","Colors","colors","id","type","onChange","e","handlerCheck","filter","htmlFor","Genders","genders","Numbers","numbers","Trades","trades","Filter","Header","state","options","value","disable","defaultValue","orderProduct","disabled","CardList","products","visible","HomePage","BASE_URL","get","url","a","fetch","Constans","App","tradesFilter","gendersFilter","colorsFilter","numbersFilter","productsFilterList","orderBy","undefined","fetchColors","then","res","json","setState","catch","err","console","log","fetchGenders","fetchNumbers","fetchTrades","fetchProducts","push","find","t","tradeId","c","colorId","gender","checked","target","parseInt","getAttribute","list","i","index","indexOf","splice","productsToFilter","productOrderByAsc","prop","b","productOrderByDesc","sort","result","forEach","p","length","g","nf","pn","React","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.4d6ecff2.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./styles.css\";\n\nconst NumberWiew = ({ data }) => {\n  return (\n    <small style={{ flexDirection: \"row\" }}>\n      {data.map((item) => {\n        return <small style={{margin : 2,background:\"tomato\",color:\"white\",borderRadius:40,padding:1}} key ={item} >{item}</small>;\n      })}\n    </small>\n  );\n};\n\nclass Card extends Component {\n  render() {\n    const { product } = this.props;\n    return (\n      <div className=\"card\">\n        <img\n          src={product.image[0]}\n          className=\"card-img\"\n          alt={product.name}\n        ></img>\n        <p className=\"card-trade\">{product.trade}</p>\n        <p className=\"card-subtitle\">{product.name} </p>\n        <p>\n          <small>\n            {product.genderName} - {product.color}  \n          </small>\n        </p>\n        <NumberWiew data={product.number} />\n        <p className=\"card-price\">{product.price} â‚º</p>\n      </div>\n    );\n  }\n}\n\nexport default Card;\n","import React, { Component } from \"react\";\nimport \"./styles.css\";\n\nclass Colors extends Component {\n  render() {\n    return (\n      <div className=\"filter-data\">\n        <p className=\"title\">Renk</p>\n        <div className=\"filter-check\">\n          {this.props.colors.map((item) => {\n            return (\n              <div key={item.id}>\n                <input\n                  type=\"checkbox\"\n                  name={item.name}\n                  id={item.id}\n                  onChange={(e) => this.props.handlerCheck(e)}\n                  filter=\"colorsFilter\"\n                />\n                <label htmlFor={item.name}>{item.name}</label>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Colors;\n","import React, { Component } from \"react\";\nimport \"./styles.css\";\nclass Genders extends Component {\n  render() {\n    return (\n      <div className=\"filter-data\">\n        <p className=\"title\">Cinsiyet</p>\n        <div className=\"filter-check\">\n          {this.props.genders.map((item) => {\n            return (\n              <div key={item.id}>\n                <input\n                  type=\"checkbox\"\n                  name={item.name}\n                  id={item.id}\n                  onChange={(e) => this.props.handlerCheck(e)}\n                  filter =\"gendersFilter\"\n                />\n                <label htmlFor={item.name}>{item.name}</label>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Genders;\n","import React, { Component } from \"react\";\nimport \"./styles.css\";\n\nclass Numbers extends Component {\n  render() {\n    return (\n      <div className=\"filter-data\">\n        <p className=\"title\">Beden</p>\n        <div className=\"filter-check\">\n          {this.props.numbers.map((item) => {\n            return (\n              <div key={item.id}>\n                <input\n                  type=\"checkbox\"\n                  name={item.name}\n                  id={item.name}\n                  onChange={(e) => this.props.handlerCheck(e)}\n                  filter=\"numbersFilter\"\n                />\n                <label htmlFor={item.name}>{item.name}</label>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Numbers;\n","import React, { Component } from \"react\";\nimport \"./styles.css\";\nclass Trades extends Component {\n  \n\n  render() {\n    return (\n      <div className=\"filter-data\">\n        <p className=\"title\">Marka</p>\n        <div className=\"filter-check\">\n          {this.props.trades.map((item) => {\n            return (\n              <div key={item.id}>\n                <input\n                  type=\"checkbox\"\n                  onChange={(e)=>this.props.handlerCheck(e)}\n                  name={item.name}\n                  id={item.id}\n                  filter =\"tradesFilter\"\n                />\n                <label htmlFor={item.name}>{item.name}</label>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Trades;\n","import React, { Component } from \"react\";\nimport {Trades, Genders, Colors, Numbers } from \"./Core\";\nimport \"./styles.css\";\nclass Filter extends Component {\n  render() {\n    const {\n      numbers,\n      trades,\n      genders,\n      colors,\n      handlerCheck,\n    } = this.props;\n    return (\n      <div className=\"filter-bar sticky\">\n        {/* <!-- Price Filter Box--> */}\n\n        \n\n        {/* <!-- Price Filter Box-->\n\n\t\t<!-- Trades Filter Box--> */}\n\n        <Trades handlerCheck={handlerCheck} trades={trades} />\n\n        {/* <!-- Trades Filter Box--> */}\n\n        {/* <!-- Genders Filter Box--> */}\n\n        <Genders handlerCheck={handlerCheck} genders={genders} />\n\n        {/* <!-- Genders Filter Box--> */}\n\n        {/* <!-- Colors Filter Box--> */}\n\n        <Colors handlerCheck={handlerCheck} colors={colors} />\n\n        {/* <!-- Numbers Filter Box--> */}\n\n        <Numbers handlerCheck={handlerCheck} numbers={numbers} />\n\n        {/* <!-- Numbers Filter Box--> */}\n      </div>\n    );\n  }\n}\n\nexport default Filter;\n","import React, { Component } from \"react\";\nimport \"./styles.css\";\nclass ShowButton extends Component {\n  render() {\n    return (\n      <button type=\"button\" className=\"filter-input show-btn\">\n        Show\n      </button>\n    );\n  }\n}\nexport default ShowButton;\n","import React, { Component } from \"react\";\nimport \"./styles.css\";\nclass SearchBox extends Component {\n  render() {\n    return (\n      <input\n        type=\"text\"\n        placeholder=\"Search\"\n        className=\"searchBox filter-input\"\n      />\n    );\n  }\n}\nexport default SearchBox;\n","import React, { Component } from \"react\";\nimport \"./styles.css\";\nclass Header extends Component {\n  state = {\n    options: [\n      {\n        name: \"SÄ±ralama SeÃ§iniz\",\n        value: \"goster\",\n        disable: true,\n      },\n      {\n        name: \"Fiyata gÃ¶re artan\",\n        value: \"art\",\n        disable: false,\n      },\n      {\n        name: \"Fiyata gÃ¶re azalan\",\n        value: \"azal\",\n        disable: false,\n      },\n    ],\n  };\n  render() {\n    const { options } = this.state;\n    return (\n      <div className=\"header\">\n        <h1 className=\"header-title\">Shop</h1>\n\n        {/* <!-- Product Order--> */}\n        <div className=\"order-product\">\n          <select  defaultValue={'goster'} onChange={e => this.props.orderProduct(e)}>\n            {options.map((item) => (\n              <option key={item.value} disabled={item.disable} value={item.value}>\n                {item.name}\n              </option>\n            ))}\n          </select>\n        </div>\n        {/* <!-- Product Order--> */}\n      </div>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from 'react'\nimport Card from '../Card/Card';\nimport \"./styles.css\";\nclass CardList extends Component {\n    render() {\n        return (\n            <div className=\"product-list\">\n               {\n                   this.props.products.map(item=>{\n                     return ( item.visible && <Card  product={item} key={item.id} /> )\n                   })\n\n               }\n                \n            </div>\n        )\n    }\n}\n\nexport default CardList;","import React, { Component } from \"react\";\nimport { Filter, CardList, Header } from \"../../components\";\nimport \"./styles.css\";\nclass HomePage extends Component {\n  render() {\n    const {\n      products,\n      numbers,\n      trades,\n      genders,\n      colors,\n      handlerCheck,\n      orderProduct\n\n    } = this.props;\n    return (\n      <div className=\"container\">\n        <div className=\"content\">\n          <Header orderProduct ={orderProduct} />\n          <CardList trades={trades} colors={colors} products={products} />\n        </div>\n        <Filter\n         \n          handlerCheck={handlerCheck}\n          numbers={numbers}\n          trades={trades}\n          colors={colors}\n          genders={genders}\n        />\n      </div>\n    );\n  }\n}\n\nexport default HomePage;\n","export const BASE_URL = \"https://e-trade-api.firebaseio.com\";\nexport const BASE_URL_END =\".json\";","import * as Constans from \"./Constans\";\n\nexport async function get(url){\n  return await fetch(Constans.BASE_URL + url + Constans.BASE_URL_END);\n};\n","import React from \"react\";\nimport { HomePage } from \"./views\";\nimport { get } from \"./utils/Networking\";\nclass App extends React.Component {\n  state = {\n    colors: [],\n    genders: [],\n    numbers: [],\n    trades: [],\n    products: [],\n    tradesFilter: [],\n    gendersFilter: [],\n    colorsFilter: [],\n    numbersFilter: [],\n    productsFilterList: [],\n    orderBy: undefined,\n  };\n\n  componentDidMount() {\n    this.fetchColors();\n    this.fetchGenders();\n    this.fetchNumbers();\n    this.fetchTrades();\n    this.fetchProducts();\n  }\n\n  fetchColors = () => {\n    get(\"/colors\")\n      .then((res) => res.json())\n      .then((res) => this.setState({ colors: res }))\n      .catch((err) => console.log(err));\n  };\n\n  fetchGenders = () => {\n    get(\"/genders\")\n      .then((res) => res.json())\n      .then((res) => this.setState({ genders: res }))\n      .catch((err) => console.log(err));\n  };\n\n  fetchNumbers = () => {\n    get(\"/numbers\")\n      .then((res) => res.json())\n      .then((res) => this.setState({ numbers: res }))\n      .catch((err) => console.log(err));\n  };\n\n  fetchTrades = () => {\n    get(\"/trade\")\n      .then((res) => res.json())\n      .then((res) => this.setState({ trades: res }))\n      .catch((err) => console.log(err));\n  };\n\n  fetchProducts = () => {\n    get(\"/products\")\n      .then((res) => res.json())\n      .then((res) => {\n        let products = [];\n        products.push(\n          res.map((product) => {\n            product.trade = this.state.trades.find(\n              (t) => t.id === product.tradeId\n            ).name;\n            product.color = this.state.colors.find(\n              (c) => c.id === product.colorId\n            ).name;\n            product.genderName = this.state.genders.find(\n              (c) => c.id === product.gender\n            ).name;\n            product.visible = true;\n            return product;\n          })\n        );\n\n        this.setState({ products: products[0] });\n      })\n      .catch((err) => console.log(err));\n  };\n\n  handlerCheck = (e) => {\n    let checked = e.target.checked;\n    let id = parseInt(e.target.id);\n    let filter = e.target.getAttribute(\"filter\");\n    let list = this.state[filter];\n    if (checked) {\n      !list.find((i) => i === id) && list.push(id);\n      this.setState({ [filter]: list });\n      //console.log(this.state.trades);\n    } else {\n      let index = list.indexOf(id);\n      list.splice(index, 1);\n\n      this.setState({ [filter]: list });\n      //console.log(this.state.trades);\n    }\n    console.log(filter, this.state[filter]);\n    this.productsToFilter();\n  };\n\n  productOrderByAsc = (prop) => {\n    return function (a, b) {\n      if (a[prop] > b[prop]) {\n        return 1;\n      } else if (a[prop] < b[prop]) {\n        return -1;\n      }\n      return 0;\n    };\n  };\n\n  productOrderByDesc = (prop) => {\n    return function (a, b) {\n      if (a[prop] < b[prop]) {\n        return 1;\n      } else if (a[prop] > b[prop]) {\n        return -1;\n      }\n      return 0;\n    };\n  };\n\n  orderProduct = (e) => {\n    let value = e.target.value;\n    let products = this.state.products;\n    if (value === \"art\") {\n      products = products.sort(this.productOrderByAsc(\"price\"));\n      this.setState({ products });\n    }\n    if (value === \"azal\") {\n      products = products.sort(this.productOrderByDesc(\"price\"));\n      this.setState({ products });\n    }\n  };\n\n  productsToFilter = () => {\n    // debugger;\n    const {\n      tradesFilter,\n      products,\n      gendersFilter,\n      colorsFilter,\n      numbersFilter,\n    } = this.state;\n    let result = products;\n\n    result.forEach((p) => {\n      if (tradesFilter.length > 0) {\n        if (tradesFilter.find((t) => t === p.tradeId)) {\n          p.visible = true;\n        } else {\n          p.visible = false;\n        }\n      } else {\n        p.visible = true;\n      }\n    });\n\n    result.forEach((p) => {\n      if (gendersFilter.length) {\n        // debugger;\n        !gendersFilter.find((g) => g === p.gender) && (p.visible = false);\n      }\n    });\n\n    result.forEach((p) => {\n      if (colorsFilter.length > 0) {\n        !colorsFilter.find((g) => g === p.colorId) && (p.visible = false);\n      }\n    });\n\n    result.forEach((p) => {\n      if (numbersFilter.length > 0) {\n        let visible = false;\n        numbersFilter.forEach((nf) => {\n          p.number.find((pn) => pn === nf) && (visible = true);\n        });\n        !visible && (p.visible = false);\n      }\n    });\n\n    this.setState({ products: result });\n\n    console.log(result);\n    this.setState({ productsFilterList: result });\n  };\n\n  render() {\n    const { products, trades, colors, genders, numbers } = this.state;\n    return (\n      <HomePage\n        trades={trades}\n        genders={genders}\n        colors={colors}\n        numbers={numbers}\n        products={products}\n        handlerCheck={this.handlerCheck}\n        orderProduct={this.orderProduct}\n      />\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"./index.css\";\n// import {Provider} from 'react-redux';\n// import ConfigureStore from './redux/common/ConfigureStore';\n\n//const store = ConfigureStore();\n\nReactDOM.render(\n  <App />,\n\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}